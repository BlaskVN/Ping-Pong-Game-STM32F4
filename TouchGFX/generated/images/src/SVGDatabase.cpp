// Generated by imageconverter. Please, do not edit!

#include <images/SVGDatabase.hpp>

using namespace touchgfx;

static const uint8_t svg_ping_pong_svgrepo_com_shape_3_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_VLINE, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_LINE, VECTOR_PRIM_HLINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_HLINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_HLINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_VLINE, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_VLINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_CLOSE
};

static const float svg_ping_pong_svgrepo_com_shape_3_points[] = {
    511.9860f, 187.3730f, 508.9380f, 135.1080f, 487.4930f, 87.3530f, 453.1490f, 56.3490f, 453.0110f, 56.2240f, 452.8700f, 56.1040f, 452.7250f, 55.9910f, 422.3180f, 27.1700f, 382.9540f, 8.2810f, 341.3720f, 2.6450f,
    299.3250f, -3.0580f, 255.7180f, 4.7920f, 218.5910f, 24.7380f, 200.0030f, 34.7220f, 182.4880f, 48.3330f, 165.0490f, 66.3500f, 146.1770f, 85.8400f, 131.5310f, 104.1430f, 120.2710f, 122.3050f, 99.4490f, 155.8910f, 91.2210f, 188.7410f, 95.8120f, 219.9300f,
    95.8710f, 220.3310f, 95.9290f, 220.7490f, 95.9880f, 221.1780f, 364.4720f, 2.4680f, 457.2880f, 0.8880f, 458.8550f, 0.0000f, 460.9880f, 0.0000f, 463.2130f,
    0.0000f, 465.4380f, 0.8880f, 467.5710f, 2.4680f, 469.1380f, 42.3760f, 508.7460f, 44.0030f, 510.3610f, 46.1300f, 511.1690f, 48.2560f, 511.1690f, 50.3820f, 511.1690f, 52.5090f, 510.3610f, 54.1360f, 508.7460f,
    147.6830f, 415.9010f, 311.7490f, 312.6840f, 415.9010f, 313.5840f, 415.7460f, 314.4260f, 415.4610f, 374.6020f, 413.1880f, 428.3040f, 366.9720f, 462.9430f, 328.2960f,
    478.4800f, 310.9490f, 490.3860f, 291.4750f, 499.3430f, 268.7640f, 501.0350f, 264.4740f, 498.9280f, 259.6270f, 494.6390f, 257.9350f, 490.3500f, 256.2480f, 485.5020f, 258.3500f, 483.8100f, 262.6400f, 475.5940f, 283.4780f, 464.6990f, 301.3099f, 450.5050f, 317.1570f,
    417.6010f, 353.8940f, 366.7970f, 397.8860f, 311.6260f, 398.8369f, 310.8210f, 398.8510f, 310.0450f, 398.9779f, 309.3110f, 399.2039f, 266.1710f, 174.5240f, 307.6580f,
    171.2630f, 304.4019f, 165.9770f, 304.4019f, 162.7190f, 307.6649f, 159.4610f, 310.9269f, 159.4630f, 316.2130f, 162.7260f, 319.4709f, 242.5470f, 399.2039f, 144.2450f,
    142.0420f, 399.2039f, 139.9290f, 400.0739f, 138.3650f, 401.6270f, 48.2560f, 491.0590f, 20.1980f, 463.2120f, 110.2170f, 373.8720f,
    111.7960f, 372.3050f, 112.6850f, 370.1720f, 112.6850f, 367.9470f, 269.4840f, 129.6110f, 286.3910f, 131.2400f, 288.0180f, 133.3750f, 288.8320f, 135.5100f, 288.8320f,
    137.6470f, 288.8320f, 139.7860f, 288.0160f, 141.4160f, 286.3840f, 144.6740f, 283.1220f, 144.6720f, 277.8360f, 141.4090f, 274.5780f, 112.6850f, 245.8850f, 220.6120f,
    112.6850f, 220.2390f, 112.6610f, 219.8671f, 112.6100f, 219.4980f, 112.5180f, 218.8190f, 112.4260f, 218.1561f, 112.3330f, 217.5121f, 108.3290f, 190.3161f, 115.7750f, 161.2431f, 134.4610f, 131.1010f, 145.0830f, 113.9650f, 159.0120f, 96.5830f, 177.0440f, 77.9600f,
    193.2690f, 61.1990f, 209.4420f, 48.6010f, 226.4910f, 39.4440f, 260.5400f, 21.1500f, 300.5420f, 13.9600f, 339.1290f, 19.1880f, 378.6110f, 24.5410f, 415.9120f, 42.9200f, 444.1700f, 70.9480f, 444.2170f, 70.9950f,
    444.6070f, 71.3810f, 445.0250f, 71.7220f, 445.4640f, 72.0160f, 474.5320f, 100.1540f, 492.6310f, 142.2480f, 495.3190f, 188.3450f, 495.5870f, 192.9471f, 499.5430f, 196.4561f, 504.1390f, 196.1931f, 508.7410f, 195.9230f, 512.2550f, 191.9750f, 511.9860f, 187.3730f,
};

static const VGFixedColor svg_ping_pong_svgrepo_com_shape_3_fill = {
    0xff3c3a41 // ARGB
};

static const VGShape svg_ping_pong_svgrepo_com_shape_3 = {
    57, 258,                                                  // numCommands, numPoints
    svg_ping_pong_svgrepo_com_shape_3_commands,               // commands
    svg_ping_pong_svgrepo_com_shape_3_points,                 // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_ping_pong_svgrepo_com_shape_3_fill,                  // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 0.0000f, 0.8314f, 512.0005f, 511.1690f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    0                                                         // next
};

static const uint8_t svg_ping_pong_svgrepo_com_shape_2_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_HLINE, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_ping_pong_svgrepo_com_shape_2_points[] = {
    447.5560f, 62.5450f, 450.0980f, 65.0700f, 420.5410f, 35.7350f, 381.6740f, 16.5310f, 340.2490f, 10.9160f, 321.0850f, 8.3180f, 301.6050f, 8.6420f, 282.5960f, 11.7610f,
    321.9350f, 18.2790f, 358.6680f, 37.0470f, 386.9020f, 65.0700f, 384.3600f, 62.5440f, 419.9030f, 94.6290f, 437.8010f, 142.3050f, 440.4560f, 187.8570f, 440.4560f, 187.8570f, 439.6620f, 226.7850f, 435.4350f, 242.0370f,
    433.0780f, 250.5400f, 431.2070f, 257.2880f, 428.3820f, 265.7030f, 419.9030f, 287.2050f, 408.6010f, 305.9010f, 393.5300f, 322.7290f, 359.7490f, 360.4460f, 312.8180f, 399.6940f, 261.3880f, 406.2270f, 262.7160f, 407.5540f,
    311.7490f, 311.7690f, 407.1840f, 368.1810f, 406.2120f, 420.1560f, 363.5560f, 456.7240f, 322.7280f, 471.7960f, 305.9010f, 483.0980f, 287.2050f, 491.5760f, 265.7020f,
    494.4010f, 257.2870f, 496.2720f, 250.5400f, 498.6290f, 242.0360f, 502.8560f, 226.7840f, 503.6500f, 187.8560f, 503.6500f, 187.8560f, 500.9960f, 142.3060f, 483.0990f, 94.6300f, 447.5560f, 62.5450f,
};

static const VGFixedColor svg_ping_pong_svgrepo_com_shape_2_fill = {
    0xffff3100 // ARGB
};

static const VGShape svg_ping_pong_svgrepo_com_shape_2 = {
    20, 89,                                                   // numCommands, numPoints
    svg_ping_pong_svgrepo_com_shape_2_commands,               // commands
    svg_ping_pong_svgrepo_com_shape_2_points,                 // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_ping_pong_svgrepo_com_shape_2_fill,                  // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 261.3880f, 9.1722f, 503.6500f, 407.5540f },             // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_ping_pong_svgrepo_com_shape_3                        // next
};

static const uint8_t svg_ping_pong_svgrepo_com_shape_1_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_VLINE, VECTOR_PRIM_LINE, VECTOR_PRIM_HLINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_ping_pong_svgrepo_com_shape_1_points[] = {
    447.5560f, 62.5450f, 450.0980f, 65.0700f, 420.5410f, 35.7350f, 381.6740f, 16.5310f, 340.2490f, 10.9160f, 299.9740f, 5.4570f, 258.3000f, 12.8780f, 222.5390f, 32.0910f,
    203.0700f, 42.5480f, 186.3320f, 56.3630f, 171.0450f, 72.1560f, 154.8280f, 88.9050f, 139.6530f, 106.8830f, 127.3650f, 126.7030f, 110.2830f, 154.2560f, 99.2700f, 186.1020f, 104.0720f, 218.7290f, 104.1590f, 219.3280f, 104.2470f, 219.9630f, 104.3350f, 220.6130f,
    249.3470f, 262.7140f, 407.5530f, 311.7470f, 311.7680f, 407.1830f,
    368.1800f, 406.2110f, 420.1550f, 363.5550f, 456.7230f, 322.7270f, 471.7950f, 305.9000f, 483.0970f, 287.2030f, 491.5750f, 265.7010f, 494.4000f, 257.2860f, 496.2710f, 250.5390f, 498.6280f, 242.0350f, 502.8549f, 226.7830f, 503.6490f, 187.8550f, 503.6490f, 187.8550f,
    500.9960f, 142.3060f, 483.0990f, 94.6300f, 447.5560f, 62.5450f,
};

static const VGFixedColor svg_ping_pong_svgrepo_com_shape_1_fill = {
    0xfffe633d // ARGB
};

static const VGShape svg_ping_pong_svgrepo_com_shape_1 = {
    18, 76,                                                   // numCommands, numPoints
    svg_ping_pong_svgrepo_com_shape_1_commands,               // commands
    svg_ping_pong_svgrepo_com_shape_1_points,                 // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_ping_pong_svgrepo_com_shape_1_fill,                  // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 102.9417f, 9.1702f, 503.6490f, 407.5530f },             // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_ping_pong_svgrepo_com_shape_2                        // next
};

static const uint8_t svg_ping_pong_svgrepo_com_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_VLINE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_HLINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_ping_pong_svgrepo_com_shape_0_points[] = {
    447.5560f, 62.5450f, 450.0980f, 65.0700f, 420.5410f, 35.7350f, 381.6740f, 16.5310f, 340.2490f, 10.9160f, 299.9740f, 5.4570f, 258.3000f, 12.8780f, 222.5390f, 32.0910f,
    203.0700f, 42.5480f, 186.3320f, 56.3630f, 171.0450f, 72.1560f, 154.8280f, 88.9050f, 139.6530f, 106.8830f, 127.3650f, 126.7030f, 110.2830f, 154.2560f, 99.2700f, 186.1020f, 104.0720f, 218.7290f, 104.1590f, 219.3280f, 104.2470f, 219.9630f, 104.3350f, 220.6130f,
    367.9480f, 8.3480f, 463.2130f, 23.9280f, 478.6780f, 32.6730f, 487.3560f,
    48.2560f, 502.8210f, 144.2450f, 407.5540f, 311.7500f, 311.7710f, 407.1840f,
    368.1830f, 406.2120f, 420.1580f, 363.5560f, 456.7260f, 322.7280f, 471.7980f, 305.9010f, 483.1000f, 287.2040f, 491.5780f, 265.7020f, 494.4030f, 257.2870f, 496.2740f, 250.5400f, 498.6310f, 242.0360f, 502.8580f, 226.7840f, 503.6520f, 187.8560f, 503.6520f, 187.8560f,
    500.9960f, 142.3060f, 483.0990f, 94.6300f, 447.5560f, 62.5450f,
};

static const VGFixedColor svg_ping_pong_svgrepo_com_shape_0_fill = {
    0xffecb300 // ARGB
};

static const VGShape svg_ping_pong_svgrepo_com_shape_0 = {
    22, 84,                                                   // numCommands, numPoints
    svg_ping_pong_svgrepo_com_shape_0_commands,               // commands
    svg_ping_pong_svgrepo_com_shape_0_points,                 // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_ping_pong_svgrepo_com_shape_0_fill,                  // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 8.3480f, 9.1702f, 503.6520f, 502.8210f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_ping_pong_svgrepo_com_shape_1                        // next
};

static const touchgfx::VGObject svg_database[] = {
    { 0.0000f, 0.8314f, 512.0005f, 510.3376f, 512.0000f, 512.0000f, &svg_ping_pong_svgrepo_com_shape_0 }
};

namespace SVGDatabase
{
const touchgfx::VGObject* getInstance()
{
    return svg_database;
}

uint16_t getInstanceSize()
{
    return 1;
}
} // namespace SVGDatabase
