/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GAMEVIEWBASE_HPP
#define GAMEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/game_screen/GamePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <gui/containers/gameBackground.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <gui/containers/ball.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
#include <touchgfx/mixins/Draggable.hpp>
#include <touchgfx/widgets/SVGImage.hpp>

class GameViewBase : public touchgfx::View<GamePresenter>
{
public:
    GameViewBase();
    virtual ~GameViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    gameBackground gameBackground1;
    touchgfx::Button backMenu;
    touchgfx::Draggable< touchgfx::MoveAnimator< ball > > ball1;
    touchgfx::Draggable< touchgfx::MoveAnimator< touchgfx::SVGImage > > pad1;
    touchgfx::Draggable< touchgfx::MoveAnimator< touchgfx::SVGImage > > pad2;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<GameViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // GAMEVIEWBASE_HPP
